{
    "siteName": "LzzsSite",
    "siteDescription": "A simple bilingual test site",
    "welcome": "Welcome to My Site",
    "homePage": "Bilingual test | Home Page",
    "home": "Home",
    "about": "About",
    "contact": "Contact",
    "test": "Test",
    "blog": "Blog",
    "more": "More",
    "hello": "Hi there üëã",
    "homeHello": "Welcome to my website, a site for learning demos, including testing static web page builds, summarizing my learning projects, and some simple blogging!",
    "useful": "If you find something useful, feel free to give me a star‚≠ê",
    "nothing": "Nothing special yet, just keep learning.",
    "login": "Login",
    "logout": "Logout",
    "defaultTheme": "default",
    "darkTheme": "dark theme",
    "lightTheme": "light theme",
    "blackTheme": "black theme",
    "homeContent": "Bilingual test | This is the home page.",
    "aboutPage": "Bilingual test | About Page",
    "aboutContent": "Bilingual test | This page provides information.",
    "footer": "¬© 2024 My Site",
    "mainContent": "Bilingual test | This is our main content section where you can find detailed information about My Site.",
    "ing": "In progress",
    "rustlingsAbout": "Solutions and expanded mdbook for rustlings 110 question version.",
    "thpptAbout": "Tsinghua operating system slides mdbook version",
    "alltoMDAbout": "An automated way to deploy a repository containing a Markdown file structure to mdBook. Using GitHub Actions, it can automatically identify the Markdown files in the specified repository and generate the corresponding mdBook. In addition, it supports custom configuration, Such as target warehouse links, ignoring specific folders, enabling natural sorting, etc., making the generated book structure more reasonable and beautiful. ",
    "MITlabsAbout": "MIT Electronic Engineering and Computer Science Course Note Series Supporting Code Repository | Computer Architecture - MIT Course Learning Community Code Repository Records",
    "lzzsfunAbout": "The source code of this website may be a static website series in the future, although the author is very amateur.",
    "MITAbout": "MIT Electrical Engineering and Computer Science Course Notes Series (MIT6.004 Computational Structures, MIT6.175 Constructive Computer Architecture, MIT6.375 Complex Digital Systems)",
    "175LabInsAbout": "6.175 Translation of Laboratory Instructions Chinese and English, Moreover",
    "MdbookSeries": "Rust/mdbook Series",
    "quote": "The only way to do great work is to love what you do.",
    "items": [
        {
            "title": "Item 1",
            "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
        },
        {
            "title": "Item 2",
            "description": "Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
        },
        {
            "title": "Item 3",
            "description": "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
        }
    ],
    "latestNews": "Bilingual test | Latest News",
    "news1": "January 1, 2024 - Happy New Year!",
    "news2": "February 14, 2024 - Valentine's Day Special Event",
    "featuredProducts": "Featured Products",
    "hideTOC": "Hide TOC",
    "showTOC": "Show TOC",
    "bareMetal": "About Bare Metal Programming",
    "WhatToOut": {
        "title": "Markdown typesetting - What to expect next",
        "description": "Explore the fascination of typography and layout designed with daisyUI, tailwindcss, markdown, hljs: This article, translated from the official daisyUI documentation, takes you step by step into the world of Markdown. From basic text formatting to complex code blocks and lists, experience how to elegantly present content with Markdown. Whether it's bold, italic, ordered/unordered lists, or code highlighting, every detail is designed to enhance the reading experience. Start your Markdown journey with this article and discover the endless possibilities of typography and layout."
    },
    "learning": {
        "title": "Learning Methods of Recording and Practicing",
        "description": "This article explains two common, simple, practical yet easily overlooked learning methods. First, we explore the method of learning through recording and documenting the learning process, which borrows from the Feynman Technique, i.e., deepening personal understanding and memory by teaching others (actual or hypothetical readers). This method not only helps learners organize and convey complex concepts but also motivates them to participate more actively in learning, while providing instant feedback to verify their understanding."
    },
    "5A": {
        "title": "5A Mindset Framework and ‚ñâ‚ñâ",
        "description": "This article explains two common, simple, and practical yet easily overlooked ways of thinking. In the learning process, I have summarized a mindset framework that is both recursive and iterative, known as the '5A method' (Analyse, Action, Accumulate, Anti-Fear, and Again). It is a systematic process of thinking and acting, aimed at helping individuals effectively solve problems and enhance their abilities. Below, we will conduct a detailed analysis of this method."
    },
    "bareMetal.0-About-bare-metal-programming": {
        "title": "Bare Metal - 0 About bare metal programming",
        "description": "Bare-metal programming refers to writing software that runs directly on hardware, without going through an operating system or any abstraction layers. This type of programming is commonly used in embedded systems, gaming consoles, dedicated computing devices, or other scenarios requiring direct hardware control."
    },
    "bareMetal.1-Development-environment-setup": {
        "title": "Bare Metal - 1 Development environment setup",
        "description": "Setting up a development environment for bare-metal programming with RISC-V and Rust is foundational to the entire development process. It includes installing necessary software tools, configuring compilation targets, and understanding the basic use of development tools. "
    },
    "bareMetal.2-Create-project": {
        "title": "Bare Metal - 2 Create project",
        "description": "Creating a bare-metal programming project based on RISC-V and Rust is a crucial step in the entire development process. This step involves not only using Rust's package manager Cargo to initialize the project but also configuring the project to meet the specific needs of a bare-metal environment. "
    },
    "bareMetal.3-Writing-boot-code": {
        "title": "Bare Metal - 3 Writing boot code",
        "description": "Writing boot code is a critical step in bare-metal programming, involving many low-level details that ensure the program can run in an environment without operating system support. Here are the basic essential steps and higher-level optional steps for writing boot code."
    },
    "bareMetal.4-Writing-the-main-program": {
        "title": "Bare Metal - 4 Writing the main program",
        "description": "Writing the main program involves transforming the startup code and the environment initialized by the system into specific application logic.This stage can be divided into writing basic content and subsequent high-level extensions."
    },
    "bareMetal.4¬Ω-Supplement-for-the-main-program-of-operating-systems": {
        "title": "Bare Metal - 4¬Ω Supplement for the main program of operating systems",
        "description": "operating system (OS) serves as a bridge between software and hardware, managing computing resources and providing a basic interface for user-computer interaction. With ongoing technological advancements, the design and implementation of operating systems face new challenges and opportunities, especially in ensuring system security, efficient concurrent processing, and supporting complex network communications."
    },
    "bareMetal.5-Compiling-code": {
        "title": "Bare Metal - 5 Compiling code",
        "description": ""
    },
    "bareMetal.6-Linking-code": {
        "title": "Bare Metal - 6 Linking code",
        "description": ""
    },
    "bareMetal.7-Generating-image-files": {
        "title": "Bare Metal - 7 Generating image files",
        "description": ""
    },
    "bareMetal.8-Running-on-the-target-platform": {
        "title": "Bare Metal - 8 Running on the target platform",
        "description": ""
    },
    "projectBlog": "Project Showcase",
    "singleBlog": "Blog Posts",
    "MITseries": "MIT Electrical Engineering & Computer Science Series",
    "seriesArticles": "Series of notes",
    "latestUpdates": "Latest Updates",
    "websiteUpdate": "Website update",
    "blogAddition": "Blog addition",
    "reactHooks": "React hooks",
    "galleryPageNewImages": "new images in the gallery page",
    "addedNewPostAbout": "Added a new blog post \"{{topic}}\"",
    "updatedPageWith": "Updated page content [{{feature}}]",
    "OptimizeTwoBlogDirectories": "Optimize two directories for blogs",
    "blogAddition0409rustlings": "Rustlings Notebook - 1-22 and story",
    "blogAddition0410rustlings": "Rustlings Notebook - 23-48",
    "blogAddition0411rustlings": "Rustlings Notebook - 49-58 and components",
    "blogAddition0412rustlings": "Rustlings Notebook - 59-71 and history",
    "blogAddition0416rustlings": "Rustlings Notebook - 72-88",
    "blogAddition0417rustlings": "Rustlings Notebook - 89-110 finish and start",
    "blogAddition0418rustlings": "Rustlings Notebook - 111, review and typesetting",
    "blogAddition0413mit": "MIT Notebook - 6.004 L5-L7 notes",
    "blogAddition0414mit": "MIT Notebook - 6.004 L7-L8 notes",
    "blogAddition0415mit": "MIT Notebook - Translated MIT6.175 lab instructions",
    "blogAddition0420mit": "MIT Notes - 6.004 L9-L10, 6.175 Combinatorial Circuits",
    "blogAddition0422mit": "MIT Notes - 6.004 L9-L10, 6.175 Combinatorial Circuits",
    "blogAddition0424BareMetal": "Bare Metal Programming 5-8, ch1 Code Tree Explained",
    "blogAddition0424BareMetal": "Bare Metal Programming 5-8, ch1 Code Tree Explained",
    "Ruststd": "The Rust standard library uses frequency statistics",
    "RustSankey": "Another: Rust Std Sankey Diagram (Rust standard library Sankey Diagram (just doing it for fun, it may get stuck))",
    "-----------------": "----------",
    "AddLatestUpdates": "Add \"Latest Updates\"",
    "ClickToOpen": "Click to open this one and close others",
    "MarkdownTypesetting": "Markdown typesetting...",
    "blogAddition0406BareMetal": "Bare Metal 0-3",
    "blogAddition0407BareMetal": "Bare Metal 4-4¬Ω"
}